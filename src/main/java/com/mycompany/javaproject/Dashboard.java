/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.javaproject;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JOptionPane;
/**
 *
 * @author ennis
 */
public class Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    public Dashboard() {
        initComponents();
        render_content();
    }
    
    // A method get the data for all the book files in the directory
    public File[] list_of_book_files() {
        File books = new File("C:/handmedown/books");
        File[] books_array = books.listFiles();
        
        return books_array;
    }
    
    // renders the content of the page (books)
    public void render_content(){
        File[] books_array = list_of_book_files();
        String content = "";
        int counter = 1;
        
        resource_list.setText(null); //clear out old text
        
        for(File book: books_array) {
            if (book.isFile() && book.getName().endsWith(".txt")) {
                try {
                    content = counter + ". ";
                    
                    BufferedReader reader;
                    try {
                        reader = new BufferedReader(new FileReader(book));
                        String line = reader.readLine();
                        while (line != null) {
                                content = content + line + "\n          ";
                                // read next line
                                line = reader.readLine();
                        }
                        // Add space and an icon between the elements
                        content += "\n\t- \u03A8 -\n\n";
                        
                        // increment the counter
                        counter++;
                        
                        // close the file
                        reader.close();
                    } catch (IOException e) {
                            e.printStackTrace();
                    }
                    //resource_list.append(line + "\n\n");
                    
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            // Output books inside the folder
            resource_list.append(content);
        }
        //repaints the panel after update
        container_panel.revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        container_panel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resource_list = new javax.swing.JTextArea();
        refresh_books_button = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        add_new_book_button = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        delete_book_button = new javax.swing.JButton();
        search_field = new javax.swing.JTextField();
        search_label = new javax.swing.JLabel();
        search_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(930, 540));
        setResizable(false);

        container_panel.setBackground(new java.awt.Color(255, 255, 255));

        resource_list.setEditable(false);
        resource_list.setColumns(20);
        resource_list.setRows(5);
        jScrollPane1.setViewportView(resource_list);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 776, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
                .addContainerGap())
        );

        refresh_books_button.setText("Refresh");
        refresh_books_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refresh_books_buttonMouseClicked(evt);
            }
        });

        jLabel1.setText("Books");

        add_new_book_button.setText("Add New");
        add_new_book_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                add_new_book_buttonMouseClicked(evt);
            }
        });

        jLabel2.setText("School Supplies");

        jButton2.setText("jButton2");

        jButton3.setText("jButton3");

        delete_book_button.setText("Del Book");
        delete_book_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                delete_book_buttonMouseClicked(evt);
            }
        });

        search_label.setText("Search");

        search_button.setText("Search");
        search_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                search_buttonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout container_panelLayout = new javax.swing.GroupLayout(container_panel);
        container_panel.setLayout(container_panelLayout);
        container_panelLayout.setHorizontalGroup(
            container_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(container_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(container_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(refresh_books_button, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add_new_book_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(delete_book_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(search_field)
                    .addComponent(search_label)
                    .addComponent(search_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        container_panelLayout.setVerticalGroup(
            container_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(container_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(container_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(container_panelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(refresh_books_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(add_new_book_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delete_book_button)
                        .addGap(18, 18, 18)
                        .addComponent(search_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(search_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(search_button)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(container_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(container_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refresh_books_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_books_buttonMouseClicked
        // handle click event for the view books button

        // use the method to get the list of files
        File[] books_array = list_of_book_files();
        
        render_content();
        
    }//GEN-LAST:event_refresh_books_buttonMouseClicked

    private void add_new_book_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_new_book_buttonMouseClicked
        //Show the add book panel when the dashboard's Add New button is clicked
        new AddBook().setVisible(true);
    }//GEN-LAST:event_add_new_book_buttonMouseClicked

    private void delete_book_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delete_book_buttonMouseClicked
        // Handle even for Delete Book Button
        String input = JOptionPane.showInputDialog(this, "Please enter the title of the book you wish to delete.").trim().toLowerCase();
        
        // check if a value is entered
        if(input != null) {
            // get information about the current user
            File temp_storage = new File("C:/handmedown/activeuser");
            File[] temp_files = temp_storage.listFiles();
            // extract the user's email address for use
            String current_user_email = temp_files[0].getName().replaceFirst("[.][^.]+$", "");
            
            // variable to store the outcome
            int outcome = 2;
            
            //get a list of books in the folder
            File []books_array = list_of_book_files();
            
            for(File book: books_array) {
                // checks for the following
                // 1. that the file is actually a file and not a directory (folder)
                // 2. that the file name starts with the current user's email address 
                // 3. that the file name ends with the title of the book that the user entered
                if (book.isFile() && book.getName().startsWith(current_user_email) && book.getName().toLowerCase().endsWith(input + ".txt")) {
                    try {
                        // delete
                        if(book.delete()){
                            // if the file was found and successfully deleted
                            outcome = 1;
                            break;
                        }
                    } catch (Exception e) {
                            e.printStackTrace();
                    }
                }
            }
            
            // output the results to the user
            if(outcome == 1) {
                JOptionPane.showMessageDialog(this, "Your book has been removed from our database.");
                render_content();
            } else if (outcome == 2) {
                JOptionPane.showMessageDialog(this, "The book you're attempting to delete was not added by you, \n"
                                                        + "or you may have typed the title incorrectly. Please try again.");
            } else if (outcome == 0) {
                JOptionPane.showMessageDialog(this, "An error occured while processing your request.");
            }
        }
    }//GEN-LAST:event_delete_book_buttonMouseClicked

    private void search_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_buttonMouseClicked
        // handle click event for the search button
        String search = search_field.getText().trim();
        
        if(search.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a book title to search for.");
        } else {
            // Stores the content to be output to the user
            String content = "";
            // variable to store the outcome
            int outcome = 2;
            int counter = 1;
            int book_count = 0;
            
            //get a list of books in the folder
            File []books_array = list_of_book_files();
            
            for(File book: books_array) {
                // checks for the following
                // 1. that the file is actually a file and not a directory (folder)
                // 2. that the file name ends with the title of the book that the user searched for
                if (book.isFile() && book.getName().toLowerCase().endsWith(search.toLowerCase() + ".txt")) {
                    try {
                        try {
                            content = counter + ". ";

                            BufferedReader reader;
                            try {
                                reader = new BufferedReader(new FileReader(book));
                                String line = reader.readLine();
                                while (line != null) {
                                        content = content + line + "\n          ";
                                        // read next line
                                        line = reader.readLine();
                                }
                                // Add space and an icon between the elements
                                content += "\n\t- \u03A8 -\n\n";

                                // increment the counter
                                counter++;
                                book_count++;
                                outcome = 1;

                                // close the file
                                reader.close();
                            } catch (IOException e) {
                                    e.printStackTrace();
                            }
                            //resource_list.append(line + "\n\n");

                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    } catch (Exception e) {
                            e.printStackTrace();
                    }
                }
            }
            
            // output the results to the user
            if(outcome == 1) {
                JOptionPane.showMessageDialog(this, "We Found " + book_count + " book with that title.");
                resource_list.setText(null); //clear out old text
                resource_list.append(content); /// add the new text
            } else if (outcome == 2) {
                JOptionPane.showMessageDialog(this, "The book you're searching for was not found. Please try searching again");
            } else if (outcome == 0) {
                JOptionPane.showMessageDialog(this, "An error occured while processing your request.");
            }
        }
    }//GEN-LAST:event_search_buttonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_new_book_button;
    private javax.swing.JPanel container_panel;
    private javax.swing.JButton delete_book_button;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refresh_books_button;
    private javax.swing.JTextArea resource_list;
    private javax.swing.JButton search_button;
    private javax.swing.JTextField search_field;
    private javax.swing.JLabel search_label;
    // End of variables declaration//GEN-END:variables
}
